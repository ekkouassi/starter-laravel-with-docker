user nginx;
worker_processes auto;

error_log /proc/self/fd/2 warn;
pid       /tmp/nginx.pid;

events {
    worker_connections 1024;
}

http {
	include      /etc/nginx/mime.types;
    default_type application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local]'
                    '"$request" $status $bytes_sent "$http_referer" "$http_user_agent"';

    log_format custom '$http_x_forwarded_for - $remote_addr - $remote_user [$time_local] '
                      '"$request" $status $bytes_sent '
                      '"$http_referer" "$http_user_agent" '
                      '"$gzip_ratio"';

    log_format download '$remote_addr - $remote_user [$time_local] '
    					'"$request" $status $bytes_sent '
    					'"$http_referer" "$http_user_agent" '
    					'"$http_range" "$sent_http_content_range"';

    access_log /var/log/nginx/access.log main;

    client_header_timeout 3m;
    client_body_timeout 3m;
    send_timeout 3m;

    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;

    output_buffers 1 32k;
    postpone_output 1460;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;

    keepalive_timeout 65;

    gzip on;
    gzip_min_length 1000;
    gzip_buffers 4 8k;
    gzip_types application/javascript application/json application/rss+xml application/vnd.ms-fontobject application/x-font application/x-font-opentype application/x-font-otf application/x-font-truetype application/x-font-ttf application/x-javascript application/xhtml+xml application/xml font/opentype font/otf font/ttf image/svg+xml image/x-icon image/jpeg image/png image/gif text/css text/html text/javascript text/plain text/xml;
    gzip_proxied no-cache no-store private expired auth;

    # read more here http://tautt.com/best-nginx-configuration-for-security/
	# don't send the nginx version number in error pages and Server header
	server_tokens off;

	# config to don't allow the browser to render the page inside an frame or iframe
	# and avoid clickjacking http://en.wikipedia.org/wiki/Clickjacking
	# if you need to allow [i]frames, you can use SAMEORIGIN or even set an uri with ALLOW-FROM uri
	# https://developer.mozilla.org/en-US/docs/HTTP/X-Frame-Options
	add_header X-Frame-Options SAMEORIGIN;

	# when serving user-supplied content, include a X-Content-Type-Options: nosniff header along with the Content-Type: header,
	# to disable content-type sniffing on some browsers.
	# https://www.owasp.org/index.php/List_of_useful_HTTP_headers
	# currently suppoorted in IE > 8 http://blogs.msdn.com/b/ie/archive/2008/09/02/ie8-security-part-vi-beta-2-update.aspx
	# http://msdn.microsoft.com/en-us/library/ie/gg622941(v=vs.85).aspx
	# 'soon' on Firefox https://bugzilla.mozilla.org/show_bug.cgi?id=471020
	add_header X-Content-Type-Options nosniff;

	# This header enables the Cross-site scripting (XSS) filter built into most recent web browsers.
	# It's usually enabled by default anyway, so the role of this header is to re-enable the filter for
	# this particular website if it was disabled by the user.
	# https://www.owasp.org/index.php/List_of_useful_HTTP_headers
	add_header X-XSS-Protection "1; mode=block";

	add_header Strict-Transport-Security 'max-age=31536000; includeSubDomains; preload';

    include /etc/nginx/conf.d/*.conf;
}
